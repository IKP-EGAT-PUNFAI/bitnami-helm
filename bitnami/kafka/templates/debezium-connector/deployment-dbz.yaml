apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: {{ .Values.dbz_connector.connectorName }}
  name: {{ .Values.dbz_connector.connectorName }}
  namespace: {{ .Values.dbz_connector.namespace }}
spec:
  replicas: {{ .Values.dbz_connector.replicaCount }}
  selector:
    matchLabels:
      service: {{ .Values.dbz_connector.connectorName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: {{ .Values.dbz_connector.connectorName }}
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/debezium-punfai"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/debezium-punfai"
          operator: "Equal"
          value: ""
          effect: "NoExecute"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/debezium-punfai
                operator: In
                values:
                - "true"
      containers:
        - env:
            - name: BOOTSTRAP_SERVERS
              value: kafka-broker-0.kafka-broker-headless.{{ .Values.dbz_connector.namespace }}.svc.cluster.local:9092,kafka-broker-1.kafka-broker-headless.{{ .Values.dbz_connector.namespace }}.svc.cluster.local:9092,kafka-broker-2.kafka-broker-headless.{{ .Values.dbz_connector.namespace }}.svc.cluster.local:9092
            - name: GROUP_ID
              value: "{{ .Values.dbz_connector.env.groupid }}"
            - name: JMXHOST
              value: localhost
            - name: JMXPORT
              value: "1976"
            # - name: KAFKA_OPTS
            #   value: -javaagent:/kafka/etc/jmx_prometheus_javaagent.jar=8080:/kafka/etc/config.yml
            - name: LD_LIBRARY_PATH
              value: /instant_client
            - name: CONFIG_STORAGE_TOPIC
              value: {{ .Values.dbz_connector.env.CONFIG_STORAGE_TOPIC }}
            - name: OFFSET_STORAGE_TOPIC
              value: {{ .Values.dbz_connector.env.OFFSET_STORAGE_TOPIC }}
            - name: STATUS_STORAGE_TOPIC
              value: {{ .Values.dbz_connector.env.STATUS_STORAGE_TOPIC }}
            - name: LOG_LEVEL
              value: {{ .Values.dbz_connector.env.loglevel }}
          image: {{ .Values.dbz_connector.image.repository }}:{{ .Values.dbz_connector.image.tag }}
          name: connect
          ports:
            - containerPort: 5005
            - containerPort: 1976
            - containerPort: 8083
          resources:
            requests:
              memory: {{ .Values.dbz_connector.resources.requests.memory }}
              cpu: {{ .Values.dbz_connector.resources.requests.cpu }}
            limits:
              memory: {{ .Values.dbz_connector.resources.limits.memory }}
              cpu: {{ .Values.dbz_connector.resources.limits.cpu }}
          # volumeMounts:
          #   - mountPath: ${PROJECT_PATH}/debezium-with-oracle-jdbc/xstreams.jar /kafka/libs
          #     name: connect-claim0
          #   - mountPath: ${PROJECT_PATH}/debezium-with-oracle-jdbc/oracle_instantclient/ojdbc8.jar /kafka/libs
          #     name: connect-claim1
      restartPolicy: {{ .Values.dbz_connector.image.restartPolicy }}
      # volumes:
      #   - name: connect-claim0
      #     persistentVolumeClaim:
      #       claimName: connect-claim0
      #   - name: connect-claim1
      #     persistentVolumeClaim:
      #       claimName: connect-claim1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: {{ .Values.dbz_connector.connectorName }}
  name: {{ .Values.dbz_connector.connectorName }}-svc
  namespace: {{ .Values.dbz_connector.namespace }}
spec:
  ports:
    - name: "5005"
      port: 5005
      targetPort: 5005
    - name: "1976"
      port: 1976
      targetPort: 1976
    - name: "8083"
      port: 8083
      targetPort: 8083
  selector:
    service: connect{{ .Values.dbz_connector.connectorName }}